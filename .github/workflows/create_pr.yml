name: Create PR on schedule

on:
  schedule:
  - cron: '0 0 1 * *'
  workflow_dispatch:

jobs:
  createPullRequest:
    permissions: write-all
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    # psql -h localhost -U postgres -c "CREATE USER runner WITH PASSWORD 'runner';"
    # psql -h localhost -U postgres -c "ALTER USER runner CREATEDB;"

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        ref: main

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1

    # - name: Install PostgreSQL
    #   run: sudo apt-get -yqq install libpq-dev

    - name: Set up Database
      run: |
        PGPASSWORD='postgres'
        sudo -u postgres psql -h localhost -c "CREATE USER runner WITH PASSWORD 'runner';"
        sudo -u postgres psql -h localhost -c "ALTER USER runner CREATEDB;"
        sudo -u postgres psql -h localhost -c "DROP DATABASE IF EXISTS action_ci;"
        sudo -u postgres psql -h localhost -c "CREATE DATABASE action_ci OWNER runner;"



    - name: Install dependencies
      run: bundle install

    - name: Setup upterm session
      uses: lhotari/action-upterm@v1
      env:
          # The hostname used to communicate with the PostgreSQL service container
          POSTGRES_HOST: postgres
          # The default PostgreSQL port
          POSTGRES_PORT: 5432


    - name: Create file
      run: |
        bin/rails db:setup
        bin/rails generate migrate create_users name:string
        bin/rails db:migrate
      env:
        DATABASE_URL: postgres://rails:rails@localhost/github_actions_test

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: Update data
        title: Update data
        body: >
          This is an auto-generated PR to update the data
        branch: auto-pr-data-update-${{ github.run_id }}
        add-paths: db/migrate
        base: main
